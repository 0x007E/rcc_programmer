name: RCC_prog ClickOnce Pipeline

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    env:
      SOLUTION_FILE: ".\\RaGae.Projects.RCC.sln"
      PROJECT_PATH: ".\\Programmer"
      PROJECT_FILE: "Programmer.csproj"
      RUNTIME_IDENTIFIER: "win-x64"
      READY_TO_RUN: true
      DOTNET_VERSION: "8.0.415"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "${{ env.DOTNET_VERSION }}"
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64
      - name: Restore packages
        run: dotnet restore ${{ env.SOLUTION_FILE }} --runtime ${{ env.RUNTIME_IDENTIFIER }} -p:PublishReadyToRun=${{ env.READY_TO_RUN }}
      - name: Decode and save PFX certificate
        shell: pwsh
        run: |
          $pfxBase64 = '${{ secrets.PFX_CLICKONCE_CERTIFICATE_BASE64 }}'
          $bytes = [Convert]::FromBase64String($pfxBase64)
          [IO.File]::WriteAllBytes("./clickonce.pfx", $bytes)
      - name: Import PFX certificate to Cert Store
        shell: pwsh
        run: |
          $password = ConvertTo-SecureString -String '${{ secrets.PFX_CLICKONCE_EXPORT_PASSWORD }}' -AsPlainText -Force
          Import-PfxCertificate -FilePath ./clickonce.pfx -CertStoreLocation Cert:\CurrentUser\My -Password $password
          Get-ChildItem Cert:\CurrentUser\My | select Subject,Thumbprint,HasPrivateKey,Provider
      - name: Publish ClickOnce
        run: |
          msbuild ${{ env.PROJECT_PATH }}\${{ env.PROJECT_FILE }} /t:publish /p:Configuration=Release /p:PublishProfile=ClickOnceProfile /p:PublishDir=.\publish /p:RuntimeIdentifier=${{ env.RUNTIME_IDENTIFIER }} /p:PublishReadyToRun=${{ env.READY_TO_RUN }}
      - name: Create ClickOnce OutputFolder
        run: |
          mkdir .\data\clickonce
          cp -r ${{ env.PROJECT_PATH }}\publish\* .\data\clickonce\

      - name: Upload ClickOnce Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-clickonce
          path: .\data
      
      - name: Upload files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: .\data

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4